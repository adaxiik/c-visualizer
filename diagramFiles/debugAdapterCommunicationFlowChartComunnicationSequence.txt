visualizerbp> {
  "command": "disconnect",
  "arguments": {
    "restart": true
  },
  "type": "request",
  "seq": 71
}
{type: 'event', event: 'output', body: {…}, seq: 132}
{type: 'event', event: 'output', body: {…}, seq: 133}
{type: 'event', event: 'output', body: {…}, seq: 134}
{type: 'event', event: 'output', body: {…}, seq: 135}
{type: 'response', request_seq: 71, success: true, command: 'disconnect', body: {…}, …}
visualizerbp> {
  "command": "initialize",
  "arguments": {
    "clientID": "vscode",
    "clientName": "Visual Studio Code",
    "adapterID": "cppdbg",
    "pathFormat": "path",
    "linesStartAt1": true,
    "columnsStartAt1": true,
    "supportsVariableType": true,
    "supportsVariablePaging": true,
    "supportsRunInTerminalRequest": true,
    "locale": "en",
    "supportsProgressReporting": true,
    "supportsInvalidatedEvent": true,
    "supportsMemoryReferences": true,
    "supportsArgsCanBeInterpretedByShell": true,
    "supportsMemoryEvent": true,
    "supportsStartDebuggingRequest": true
  },
  "type": "request",
  "seq": 1
}
{type: 'response', request_seq: 1, success: true, command: 'initialize', body: {…}, …}
visualizerbp> {
  "command": "launch",
  "arguments": {
    "name": "C/C++: gcc build and debug active file",
    "type": "cppdbg",
    "request": "launch",
    "program": "/home/student/Desktop/git/VisualizerBP/testingCode/C/testingSourceCode",
    "args": [],
    "stopAtEntry": false,
    "cwd": "/home/student/Desktop/git/VisualizerBP/testingCode/C",
    "environment": [],
    "externalConsole": false,
    "MIMode": "gdb",
    "setupCommands": [
      {
        "description": "Enable pretty-printing for gdb",
        "text": "-enable-pretty-printing",
        "ignoreFailures": true
      },
      {
        "description": "Set Disassembly Flavor to Intel",
        "text": "-gdb-set disassembly-flavor intel",
        "ignoreFailures": true
      }
    ],
    "existing": false,
    "preLaunchTask": "C/C++: gcc build active file",
    "detail": "preLaunchTask: C/C++: gcc build active file",
    "taskDetail": "Task generated by Debugger.",
    "taskStatus": "Configured Task",
    "isDefault": true,
    "miDebuggerPath": "/usr/bin/gdb",
    "debuggerEvent": "debugPanel",
    "configSource": "workspaceFolder",
    "debugType": "debug",
    "__sessionId": "adc5a4c3-a618-40aa-a7fe-27dbd7cd0ea1"
  },
  "type": "request",
  "seq": 2
}
{type: 'request', command: 'runInTerminal', arguments: {…}, seq: 2}
visualizerbp> {
  "type": "response",
  "seq": 3,
  "command": "runInTerminal",
  "request_seq": 2,
  "success": true,
  "body": {
    "shellProcessId": 34048
  }
}
{type: 'event', event: 'output', body: {…}, seq: 3}
{type: 'response', request_seq: 2, success: true, command: 'launch', body: {…}, …}
{type: 'event', event: 'initialized', body: {…}, seq: 5}
visualizerbp> {
  "command": "setBreakpoints",
  "arguments": {
    "source": {
      "name": "testingSourceCode.c",
      "path": "/home/student/Desktop/git/VisualizerBP/testingCode/C/testingSourceCode.c",
      "sources": [],
      "checksums": []
    },
    "lines": [
      29,
      70
    ],
    "breakpoints": [
      {
        "line": 29
      },
      {
        "line": 70
      }
    ],
    "sourceModified": false
  },
  "type": "request",
  "seq": 4
}
visualizerbp> {
  "command": "setFunctionBreakpoints",
  "arguments": {
    "breakpoints": []
  },
  "type": "request",
  "seq": 5
}
visualizerbp> {
  "command": "setDataBreakpoints",
  "arguments": {
    "breakpoints": []
  },
  "type": "request",
  "seq": 6
}
visualizerbp> {
  "command": "setInstructionBreakpoints",
  "arguments": {
    "breakpoints": []
  },
  "type": "request",
  "seq": 7
}
visualizerbp> {
  "command": "setExceptionBreakpoints",
  "arguments": {
    "filters": [],
    "filterOptions": []
  },
  "type": "request",
  "seq": 8
}
{type: 'response', request_seq: 4, success: true, command: 'setBreakpoints', body: {…}, …}
{type: 'event', event: 'breakpoint', body: {…}, seq: 7}
{type: 'event', event: 'breakpoint', body: {…}, seq: 8}
{type: 'response', request_seq: 5, success: true, command: 'setFunctionBreakpoints', body: {…}, …}
{type: 'response', request_seq: 6, success: true, command: 'setDataBreakpoints', body: {…}, …}
{type: 'response', request_seq: 7, success: true, command: 'setInstructionBreakpoints', body: {…}, …}
{type: 'response', request_seq: 8, success: true, command: 'setExceptionBreakpoints', body: {…}, …}
visualizerbp> {
  "command": "configurationDone",
  "type": "request",
  "seq": 9
}
{type: 'event', event: 'output', body: {…}, seq: 14}
{type: 'response', request_seq: 9, success: true, command: 'configurationDone', body: {…}, …}
visualizerbp> {
  "command": "threads",
  "type": "request",
  "seq": 10
}
{type: 'response', request_seq: 10, success: true, command: 'threads', body: {…}, …}
{type: 'event', event: 'process', body: {…}, seq: 16}
{type: 'event', event: 'thread', body: {…}, seq: 17}
{type: 'event', event: 'breakpoint', body: {…}, seq: 18}
{type: 'event', event: 'breakpoint', body: {…}, seq: 19}
{type: 'event', event: 'output', body: {…}, seq: 20}
{type: 'event', event: 'output', body: {…}, seq: 21}
{type: 'event', event: 'module', body: {…}, seq: 22}
visualizerbp> {
  "command": "threads",
  "type": "request",
  "seq": 11
}
{type: 'response', request_seq: 11, success: true, command: 'threads', body: {…}, …}
{type: 'event', event: 'output', body: {…}, seq: 24}
{type: 'event', event: 'output', body: {…}, seq: 25}
{type: 'event', event: 'output', body: {…}, seq: 26}
{type: 'event', event: 'output', body: {…}, seq: 27}
{type: 'event', event: 'module', body: {…}, seq: 28}
{type: 'event', event: 'output', body: {…}, seq: 29}
{type: 'event', event: 'output', body: {…}, seq: 30}
{type: 'event', event: 'output', body: {…}, seq: 31}
{type: 'event', event: 'output', body: {…}, seq: 32}
{type: 'event', event: 'stopped', body: {…}, seq: 33}
body: {reason: 'breakpoint', threadId: 34441, allThreadsStopped: true, source: {…}, line: 29, …}
allThreadsStopped: true
column: 1
line: 29
reason: 'breakpoint'
source: {name: 'testingSourceCode.c', path: '/home/student/Desktop/git/VisualizerBP/testingCode/C/testingSourceCode.c', sources: Array(0), checksums: Array(0)}
threadId: 34441
[[Prototype]]: Object
event: 'stopped'
seq: 33
type: 'event'
[[Prototype]]: Object
visualizerbp> {
  "command": "stackTrace",
  "arguments": {
    "threadId": 34441,
    "levels": 1,
    "startFrame": 0
  },
  "type": "request",
  "seq": 12
}
visualizerbp> {
  "command": "threads",
  "type": "request",
  "seq": 13
}
{type: 'response', request_seq: 12, success: true, command: 'stackTrace', body: {…}, …}
{type: 'response', request_seq: 13, success: true, command: 'threads', body: {…}, …}
visualizerbp> {
  "command": "scopes",
  "arguments": {
    "frameId": 1000
  },
  "type": "request",
  "seq": 14
}
visualizerbp> {
  "command": "stackTrace",
  "arguments": {
    "threadId": 34441,
    "startFrame": 0,
    "levels": 20
  },
  "type": "request",
  "seq": 15
}
{type: 'response', request_seq: 14, success: true, command: 'scopes', body: {…}, …}
{type: 'response', request_seq: 15, success: true, command: 'stackTrace', body: {…}, …}
visualizerbp> {
  "command": "disassemble",
  "arguments": {
    "memoryReference": "0x00005555555551a3",
    "offset": 0,
    "instructionOffset": -200,
    "instructionCount": 400,
    "resolveSymbols": true
  },
  "type": "request",
  "seq": 16
}
visualizerbp> {
  "command": "variables",
  "arguments": {
    "variablesReference": 1000
  },
  "type": "request",
  "seq": 17
}
visualizerbp> {
  "command": "scopes",
  "arguments": {
    "frameId": 1001
  },
  "type": "request",
  "seq": 18
}
visualizerbp> {
  "command": "scopes",
  "arguments": {
    "frameId": 1002
  },
  "type": "request",
  "seq": 19
}
visualizerbp> {
  "command": "scopes",
  "arguments": {
    "frameId": 1001
  },
  "type": "request",
  "seq": 20
}
visualizerbp> {
  "command": "scopes",
  "arguments": {
    "frameId": 1002
  },
  "type": "request",
  "seq": 21
}
{type: 'response', request_seq: 16, success: true, command: 'disassemble', body: {…}, …}
{type: 'response', request_seq: 17, success: true, command: 'variables', body: {…}, …}
{type: 'response', request_seq: 18, success: true, command: 'scopes', body: {…}, …}
{type: 'response', request_seq: 19, success: true, command: 'scopes', body: {…}, …}
{type: 'response', request_seq: 20, success: true, command: 'scopes', body: {…}, …}
{type: 'response', request_seq: 21, success: true, command: 'scopes', body: {…}, …}
Value for frame id 1000 recieved (variables)
{variables: Array(2)}
visualizerbp> {
  "command": "variables",
  "arguments": {
    "variablesReference": 1001
  },
  "type": "request",
  "seq": 22
}
visualizerbp> {
  "command": "variables",
  "arguments": {
    "variablesReference": 1002
  },
  "type": "request",
  "seq": 23
}
visualizerbp> {
  "command": "variables",
  "arguments": {
    "variablesReference": 1001
  },
  "type": "request",
  "seq": 24
}
visualizerbp> {
  "command": "variables",
  "arguments": {
    "variablesReference": 1002
  },
  "type": "request",
  "seq": 25
}
{type: 'response', request_seq: 22, success: true, command: 'variables', body: {…}, …}
Value for frame id 1001 recieved (variables)
{variables: Array(6)}
{type: 'response', request_seq: 23, success: true, command: 'variables', body: {…}, …}
Value for frame id 1002 recieved (variables)
{variables: Array(1)}
{type: 'response', request_seq: 24, success: true, command: 'variables', body: {…}, …}
{type: 'response', request_seq: 25, success: true, command: 'variables', body: {…}, …}
Value for frame id 1001 recieved (variables)
{variables: Array(6)}
visualizerbp> {
  "command": "scopes",
  "arguments": {
    "frameId": 1001
  },
  "type": "request",
  "seq": 26
}
Value for frame id 1002 recieved (variables)
{variables: Array(1)}
{type: 'response', request_seq: 26, success: true, command: 'scopes', body: {…}, …}
visualizerbp> {
  "command": "variables",
  "arguments": {
    "variablesReference": 1023
  },
  "type": "request",
  "seq": 27
}
{type: 'response', request_seq: 27, success: true, command: 'variables', body: {…}, …}
visualizerbp> {
  "command": "scopes",
  "arguments": {
    "frameId": 1002
  },
  "type": "request",
  "seq": 28
}
{type: 'response', request_seq: 28, success: true, command: 'scopes', body: {…}, …}
body: {scopes: Array(2)}
scopes: (2) [{…}, {…}]
0: {presentationHint: 'locals', name: 'Locals', variablesReference: 1026, expensive: false}
1: {presentationHint: 'registers', name: 'Registers', variablesReference: 1027, expensive: true}
length: 2
[[Prototype]]: Array(0)
[[Prototype]]: Object
[[Prototype]]: Object
command: 'scopes'
request_seq: 28
seq: 50
success: true
type: 'response'
[[Prototype]]: Object
visualizerbp> {
  "command": "variables",
  "arguments": {
    "variablesReference": 1026
  },
  "type": "request",
  "seq": 29
}
{type: 'response', request_seq: 29, success: true, command: 'variables', body: {…}, …}
body: {variables: Array(11)}
variables: (11) [{…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}, {…}]
0: {name: 'intLocal', value: '115', type: 'int', evaluateName: 'intLocal', variablesReference: 0, …}
1: {name: 'tempCharDynamicCounter', value: '15', type: 'int', evaluateName: 'tempCharDynamicCounter', variablesReference: 0, …}
2: {name: 'charArrDynamic', value: '0x5555555592a0 "abcdefghijklmno"', type: 'char *', evaluateName: 'charArrDynamic', variablesReference: 1028, …}
3: {name: 'charArrDynamic2', value: '0x0', type: 'char *', evaluateName: 'charArrDynamic2', variablesReference: 1029, …}
4: {name: 'charArrStatic', value: '[5]', type: 'char [5]', evaluateName: 'charArrStatic', variablesReference: 1030}
5: {name: 'intStaticArr', value: '[5]', type: 'int [5]', evaluateName: 'intStaticArr', variablesReference: 1031}
6: {name: 'intStaticArr2', value: '[5]', type: 'int [5]', evaluateName: 'intStaticArr2', variablesReference: 1032}
7: {name: 'staticStruct1', value: '{...}', type: 'struct myStruct', evaluateName: 'staticStruct1', variablesReference: 1033}
8: {name: 'myDynamicStruct1', value: '0x0', type: 'struct myStruct *', evaluateName: 'myDynamicStruct1', variablesReference: 1034, …}
9: {name: 'staticStruct2', value: '{...}', type: 'struct myStruct', evaluateName: 'staticStruct2', variablesReference: 1035}
10: {name: 'staticComplexStruct', value: '{...}', type: 'struct myComplexStruct', evaluateName: 'staticComplexStruct', variablesReference: 1036}
length: 11
[[Prototype]]: Array(0)
[[Prototype]]: Object
[[Prototype]]: Object
command: 'variables'
request_seq: 29
seq: 51
success: true
type: 'response'
[[Prototype]]: Object
